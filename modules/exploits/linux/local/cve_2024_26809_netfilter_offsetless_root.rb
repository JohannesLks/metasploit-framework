#
# Return CheckCode depending on kernel release.
#
# Verified affected ranges (based on CPE definitions):
#   * ≥ 5.10.130 and < 5.10.214
#   * ≥ 5.15.54  and < 5.15.153
#   * ≥ 5.18.11  and < 6.1.83
#   * ≥ 6.2.0    and < 6.6.23
#   * ≥ 6.7.0    and < 6.7.11
#   * ≥ 6.8.0    and < 6.8.2
#
def check
  return CheckCode::Safe('Not a Linux session')   unless session.platform =~ /linux/i
  return CheckCode::Safe('Not a 64-bit kernel')   unless kernel_arch.include?('x86_64')

  rel_string = kernel_release.split('-').first
  kernel_ver = Rex::Version.new(rel_string)

  vuln =
    (kernel_ver >= Rex::Version.new('5.10.130') && kernel_ver < Rex::Version.new('5.10.214')) ||
    (kernel_ver >= Rex::Version.new('5.15.54')  && kernel_ver < Rex::Version.new('5.15.153')) ||
    (kernel_ver >= Rex::Version.new('5.18.11')  && kernel_ver < Rex::Version.new('6.1.83'))   ||
    (kernel_ver >= Rex::Version.new('6.2.0')    && kernel_ver < Rex::Version.new('6.6.23'))   ||
    (kernel_ver >= Rex::Version.new('6.7.0')    && kernel_ver < Rex::Version.new('6.7.11'))   ||
    (kernel_ver >= Rex::Version.new('6.8.0')    && kernel_ver < Rex::Version.new('6.8.2'))

  return CheckCode::Appears("Kernel #{rel_string} is in a known vulnerable range") if vuln

  CheckCode::Safe("Kernel #{rel_string} is outside the known vulnerable window")
end
